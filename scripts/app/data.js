export const lessons = [
    'Введение',
    'Урок 1. Что такое веб-сайты и как они работают?',
    'Урок 2. Разберем простой сайт',
    'Урок 3. Создадим свой первый сайт, базовая структура скелета',
    'Урок 4. Работа со стилями',
    'Урок 5. Структура HTML',
    'Урок 6. Основные теги в HTML #1',
    'Урок 7. Основные теги в HTML #2',
    'Урок 8. Семантическая верстка',
    'Урок 9. Начало работы с CSS',
    'Урок 10. Отступы и размеры элементов сайта',
    'Урок 11. Строчные и блочные элементы',
    'Урок 12. Расположение, обтекание и слои',
    'Урок 13. Блочная вёрстка',
    'Урок 14. Работа с шрифтом, цветами и фоном',
    'Урок 15. FlexBox',
    'Урок 16. Разработка сайта #1',
    'Урок 17. Разработка сайта #2',
    'Урок 18. Разработка сайта #3',
    'Урок 19. Разработка сайта #4',
    'Урок 20. Разработка сайта #5',
    'Урок 21. Разработка сайта #6',
    'Урок 22. Разработка сайта #7',
    'Урок 23. Разработка сайта #8',
    'Урок 24. Что такое JavaScript?',
    'Урок 25. Библиотека jQuery. Управление стилями элементов',
    'Урок 26. Обработка событий JavaScript',
    'Урок 27. Работа с DOM',
    'Урок 28. Отображение и скрытие элементов',
    'Урок 29. Модальное окно.',
    'Урок 30. Работа с сетью.',
    'Урок 31. Ширина и адаптация сайта.',
    'Урок 32. Медиа-запросы. Адаптация сайта #1.',
    'Урок 33. Адаптация сайта #2.',
    'Урок 34. Адаптация сайта #3.',
    'Урок 35. Кроссбраузерность.',
    'Урок 36. Псевдокласс hover.',
    'Урок 37. Переходы CSS.',
    'Урок 38. Защита проекта.',
    'Урок 39. JavaScript Введение',
    'Урок 40. JavaScript Переменные',
    'Урок 41. JavaScript Типы данных',
    'Урок 42. JS Операторы и Условные операторы IF/ELSE',
    'Урок 43. JavaScript Циклы',
    'Урок 44. JavaScript Массивы',
    'Урок 45. JavaScript Функции',
    'Урок 46. JavaScript Функции #2',
    'Урок 47. JavaScript DOM',
    'Урок 48. JavaScript Крестики-нолики',
    'Урок 49. Крестики Нолики #2',
    'Урок 50. Java Script Крестики нолики #3',
    'Урок 51. React Введение',
    'Урок 52. React Компоненты',
    'Урок 53. React Новый компонент',
    'Урок 54. Объекты в JavaScript',
    'Урок 55. Состояния в JS (useState)',
    'Урок 56. JSON',
    'Урок 57. Работа с запросами',
    'Урок 58. Работа с ссылками',
    'Урок 59. Динамические ссылки в React',
    'Урок 60. Шапка и подвал сайта',
    'Урок 61. React завершение',
];

export const messages = {
    'students-list': {
        title: 'Список учеников',
        text: 'Здесь отображается список учеников, для которых еженедельно нужно отправлять отчет. Ребенка можно добавить просто вписав его имя в соответствующее поле и затем нажать "Добавить". Удалить того или иного ученика можно по нажатию на крестик. Галочками помечаем тех, кому отчет уже отправлен (также есть строка состояния, которая показывает сколько осталось отправить отчетов). Список будет автоматически сортироваться таким образом, что первыми будут идти дети, родителям которых отчет еще не отправлен. Можно разом убрать галочки со всех учеников, когда например начинаем писать отчеты для новой недели. Вся информация сохраняется в локальное хранилище сайта. При удалениии истории браузера, могут удалиться и эти данные тоже. Будьте внимательны!',
    },
    'report-fill': {
        title: 'Данные для отчета',
        text: 'В данном блоке заполняется информация для отчета. Нужно указать следующие данные:<br><br><ul><li>Имя ребенка в родительном падеже (отвечая на вопрос "Чей отчет?": Алихана, Малики)</li><li>Количество фактических и запланированных посещений за неделю</li><li>Отметить галочками пройденные уроки (нажмите на "Пройденные за неделю уроки GetCourse", чтобы раскрыть список). Если ничего не выбрать, то в отчет будет записано, что новых тем пройдено не было</li><li>Написать свой комментарий по ученику, либо воспользоваться уже готовым шаблоном (можно создавать свои, сохраняются в локальном хранилище браузера)</li><li>Указать оценку ученика за неделю от 1 до 10</li></ul><br>Нажимаем "Создать" и в результате сгенерируется отчет в блоке "Сообщение отчета"<br><br>Если нужно быстро очистить форму заполнения отчета, то просто нажимаем кнопку "Очистить"',
    },
    'report-result': {
        title: 'Сообщение отчета',
        text: 'В данном окне можно скопировать или подредактировать сгенерированный отчет. Будьте внимательны и проверяйте сообщение на наличие ошибок. Также в AlfaCRM есть ограничение по количеству символов (максимум примерно 1000), так что на это тоже стоит обращать внимание. Если длина текста сообщения превысит 950 символов, то появится предупреждение. Затем можно воспользоваться кнопкой для быстрого копирования "Скопировать" в нижней части этого блока, затем уже перейти в AlfaCRM и отправить отчет родителю',
    },
};

export const default_comment_templates = [
    {
        id: 'id1',
        title: 'Хорошая успеваемость',
        text: 'Молодец, стремится к знаниям и успешному окончанию учебы, без проблем изучили новые темы и сделали домашнее задание. Так держать!',
    },
    {
        id: 'id2',
        title: 'Плохая успеваемость',
        text: 'Не проявляет интерес к учебному процессу, часто отвлекается и не выполняет домашние задания.',
    },
];

export const getReport = function (
    name = null,
    comment = null,
    actual_attendance = null,
    expected_attendance = null,
    mark = null,
    learned_lessons = []
) {
    let topics =
        learned_lessons.length != 0 ? 'Последние пройденные темы:' : 'На этой неделе новые темы не были изучены';
    learned_lessons.forEach((lesson, index) => {
        topics += `\n- ${lesson}`;
    });

    return `Здравствуйте!
Вас беспокоит наставник ${(name || 'вашего ребенка').trim()} с академии Morrison

1. ${comment.trim()}

2. Посещено уроков ${(actual_attendance || '0').trim()} из ${(expected_attendance || '3').trim()}

3. ${topics.trim()}

4. Оценка за неделю ${(mark || '10').trim()}/10.

С уважением, онлайн-школа программирования Morrison!

При наличии вопросов вам необходимо связаться с вашим менеджером. Номер телефона: +77751253854

Спасибо за понимание, хорошего дня!`;
};
